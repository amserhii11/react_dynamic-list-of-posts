{"version":3,"sources":["components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","api/getComments.js","api/getPosts.js","api/getUsers.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","email","address","city","street","Comment","comment","body","CommentList","comments","map","components_Comment_Comment","Post","post","components_User_User","title","components_CommentList_CommentList","filter","postId","id","propTypes","posts","PropTypes","arrayOf","shape","userId","number","isRequired","string","PostList","item","components_Post_Post","key","getComments","fetch","then","response","json","getPosts","getUsers","App","state","copyPosts","users","isLoading","dataLoading","_this","setState","searchPost","event","prevState","toLowerCase","includes","target","value","listPost","listUser","preparedPosts","this","_objectSpread","find","length","type","onClick","Fragment","placeholder","onChange","components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1f372a23.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  return (\n    <div className=\"user\">\n      <h2 className=\"username\">{user.name}</h2>\n      <p className=\"usermail\">{user.email}</p>\n      <p className=\"useradress\">{user.address.city}</p>\n      <p className=\"useradress\">{user.address.street}</p>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  adress: PropTypes.shape({\n    street: PropTypes.string.isRequired,\n    suite: PropTypes.string,\n    city: PropTypes.string.isRequired,\n    zipcode: PropTypes.string,\n    geo: PropTypes.shape({\n      lat: PropTypes.string,\n      lng: PropTypes.string,\n    }),\n  }),\n};\n\nexport default User;\n","import React from 'react';\nimport './Comment.css';\nimport PropTypes from 'prop-types';\n\nfunction Comment({ comment }) {\n  return (\n    <div className=\"comment\">\n      <h3 className=\"comment__name\">{comment.name}</h3>\n      <h4 className=\"comment__email\">{comment.email}</h4>\n      <p className=\"comment__body\">{comment.body}</p>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    postId: PropTypes.number,\n    id: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport './CommentList.css';\nimport PropTypes from 'prop-types';\nimport Comment from '../Comment/Comment';\n\nfunction CommentList({ comments }) {\n  return comments.map(comment => <Comment comment={comment} />);\n}\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      postId: PropTypes.number,\n      id: PropTypes.number,\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      body: PropTypes.stirng,\n    })\n  ),\n};\n\nexport default CommentList;\n","import React from 'react';\nimport './Post.css';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\n\nfunction Post({ post, user, comments }) {\n  return (\n    <div className=\"post\">\n      <User user={user} />\n      <div className=\"post-content\">\n        <h1 className=\"post__title\">{post.title}</h1>\n        <p className=\"post__body\">{post.body}</p>\n      </div>\n      <h2 className=\"desription\">Comments:</h2>\n      <CommentList\n        comments={comments.filter(comment => comment.postId === post.id)}\n      />\n    </div>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n  }),\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    username: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.shape({\n      street: PropTypes.string.isRequired,\n      suite: PropTypes.string,\n      city: PropTypes.string.isRequired,\n      zipcode: PropTypes.string,\n    }),\n  }),\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      postId: PropTypes.number,\n      id: PropTypes.number,\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      body: PropTypes.string,\n    })\n  ),\n};\n\nexport default Post;\n","import React from 'react';\nimport './PostList.css';\nimport PropTypes from 'prop-types';\nimport Post from '../Post/Post';\n\nfunction PostList({ posts, comments }) {\n  return (\n    <div className=\"post-list\">\n      {posts.map(item => (\n        <Post post={item} comments={comments} user={item.user} key={item.id} />\n      ))}\n    </div>\n  );\n}\n\nPost.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.number.isRequired,\n      body: PropTypes.string.isRequired,\n    })\n  ),\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      postId: PropTypes.number,\n      id: PropTypes.number,\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      body: PropTypes.string,\n    })\n  ),\n};\n\nexport default PostList;\n","export const getComments = () => {\n  return fetch(`https://jsonplaceholder.typicode.com/comments`).then(response =>\n    response.json()\n  );\n};\n","export const getPosts = () => {\n  return fetch(`https://jsonplaceholder.typicode.com/posts`).then(response =>\n    response.json()\n  );\n};\n","export const getUsers = () => {\n  return fetch(`https://jsonplaceholder.typicode.com/users`).then(response =>\n    response.json()\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList/PostList';\nimport { getComments } from './api/getComments';\nimport { getPosts } from './api/getPosts';\nimport { getUsers } from './api/getUsers';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    copyPosts: [],\n    users: [],\n    comments: [],\n    isLoading: false,\n  };\n\n  dataLoading = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    getComments().then((comments) => {\n      this.setState({ comments });\n    });\n    getUsers().then((users) => {\n      this.setState({ users });\n    });\n    getPosts().then((posts) => {\n      this.setState({ copyPosts: posts, posts, isLoading: false });\n    });\n  };\n\n  searchPost = (event) => {\n    this.setState(prevState => ({\n      posts: prevState.copyPosts.filter(\n        post => post.title.toLowerCase().includes(event.target.value.toLowerCase())\n          || post.body.toLowerCase().includes(event.target.value.toLowerCase())\n      ),\n    }));\n  };\n\n  render() {\n    const preparedPosts = UserToPosts(this.state.posts, this.state.users);\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of posts</h1>\n\n        <p>\n          <span>posts: </span>\n          {this.state.posts.length}\n        </p>\n\n        <p>\n          <span>comments: </span>\n          {this.state.comments.length}\n        </p>\n\n        <p>\n          <span>Users: </span>\n          {this.state.users.length}\n        </p>\n        {this.state.copyPosts.length === 0 ? (\n          <button\n            type=\"button\"\n            onClick={this.dataLoading}\n            className=\"btn btn-info\"\n          >\n            {this.state.isLoading ? (\n              <span className=\"spinner-border spinner-border-sm\" />\n            ) : (\n              <span>Load</span>\n            )}\n            {' '}\n          </button>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              name=\"text-area\"\n              placeholder=\"Write text you find\"\n              className=\"form-control\"\n              onChange={this.searchPost}\n            />\n            <PostList posts={preparedPosts} comments={this.state.comments} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction UserToPosts(listPost, listUser) {\n  return listPost.map(post => ({\n    ...post,\n    user: listUser.find(user => user.id === post.userId),\n  }));\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}